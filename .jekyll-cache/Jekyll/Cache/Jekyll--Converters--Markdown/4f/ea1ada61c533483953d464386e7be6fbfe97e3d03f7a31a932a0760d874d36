I"y<hr />
<p>아직 챕터 2까지 밖에 안읽었지만 벌써 눈이 번쩍 뜨인다. 그동안 별로 중요하다고 생각하지 않았던 것들이 갑자기 엄청나게 중요해보이고 코딩을 읽고 쓸 때 좀 더 깊이 고민하게 된다. 챕터 2까지 읽은 소감은 진작 읽을걸…</p>

<hr />

<h2 id="이름-짓기에-온-힘을-다해라">이름 짓기에 온 힘을 다해라</h2>

<p>이름을 지을 때 그것이 변수든 함수든 그것의 목적이 나타나게 지으라는 말을 자주 듣는다. 이 책은 이에 대해 아주 심각하게 받아들이고 이름을 신중히 정하라고 말한다.</p>

<p>첫 페이지에서부터 좋은 이름을 지었을 때의 예시를 보여주는데 신선하게 충격을 받았다. 이 챕터는 계속해서 어떻게 하면 이름을 잘 지을 수 있는 지를 알려준다.</p>

<ol>
  <li>
    <p>뜻이 안보이는 이름은 피해라  ex) hp, aix, sco …</p>
  </li>
  <li>
    <p>컴파일러가 만족하는 코딩을 하지 말고 자신을 위한 코딩을 써라 ex) 변수 뒤에 1,2 붙이는 나쁜 행동ㅋ</p>
  </li>
  <li>
    <p>noise word를 피해라 ex)Productinfo - ProductData 차이가 뭐야?</p>
  </li>
  <li>
    <p>자신이 발음을 할 수 있는 이름을 지어줘라</p>
  </li>
  <li>
    <p>찾기 쉬운 이름을 지어줘라</p>
  </li>
  <li>
    <p>prefix는 정말 필요할 때만 특히 그룹 변수나 메소드를 표현할 때 좋다.</p>
  </li>
  <li>
    <p>통일성을 찾아라</p>
  </li>
</ol>

<p>마지막으로 좋은 quote</p>

<blockquote>
  <p>Clariry is king</p>
</blockquote>

<hr />
<p>막상 적고 보니 별거 없지만 챕터 3을 읽으면서도 느끼는 건 이름 짓기는 정말 중요하다. 특이 나처럼 유지 보수를 하는 일에는 이름만큼 중요한게 없다. 개발자+작명가가 되어야 한다. ‘개발명가’</p>
:ET